<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Aurora.Settings.Layers"
             xmlns:System="clr-namespace:System;assembly=mscorlib" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Controls="clr-namespace:Aurora.Controls"
             xmlns:EnumValueConverters="clr-namespace:Aurora.Utils"
             xmlns:EnumPercentEffectType="clr-namespace:Aurora.Settings"
             xmlns:ncore="http://schemas.ncore.com/wpf/xaml/colorbox"
             xmlns:layout="clr-namespace:Aurora.Controls.Layout"
             xmlns:qc="http://QuickConverter.CodePlex.com/"
             x:Class="Aurora.Settings.Layers.Control_PercentLayer"
             mc:Ignorable="d" Loaded="UserControl_Loaded" d:DataContext="{local:PercentLayerHandler}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="PercentEffectType" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="EnumPercentEffectType:PercentEffectType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <EnumValueConverters:PercentEffectTypeToStringVC x:Key="PercentEffectTypeToStringVC"/>
            <DataTemplate x:Key="PercentEffectTypeTemplate">
                <TextBlock Text="{Binding Converter={StaticResource PercentEffectTypeToStringVC}}" />
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Visible">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" MinWidth="250"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="250" MinWidth="250"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="250" MinWidth="250"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Margin="10,0,5,0">
                <layout:ColumnProperty PropertyHeader="Current Value:">
                    <ComboBox x:Name="ComboBoxVariable" IsEditable="True" Margin="5,0,0,0" Text="{Binding Properties._VariablePath}"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Minimum Value:">
                    <ComboBox x:Name="ComboBoxMinVariable" IsEditable="True" TextBoxBase.TextChanged="ComboBox_min_variable_TextChanged" Margin="5,0,0,0"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Maximum Value:">
                    <ComboBox x:Name="ComboBoxMaxVariable" IsEditable="True" TextBoxBase.TextChanged="ComboBox_max_variable_TextChanged" Margin="5,0,0,0"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Progress Color:">
                    <xctk:ColorPicker x:Name="ColorPicker_progressColor" Margin="5,0,0,0"  ColorMode="ColorCanvas" SelectedColorChanged="ColorPicker_progressColor_SelectedColorChanged" UsingAlphaChannel="True" />
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Background Color:">
                    <xctk:ColorPicker x:Name="ColorPicker_backgroundColor" Margin="5,0,0,0" ColorMode="ColorCanvas"  SelectedColorChanged="ColorPicker_backgroundColor_SelectedColorChanged" UsingAlphaChannel="True"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Effect Type:">
                    <ComboBox x:Name="ComboBox_effect_type" Margin="5,0,0,0" SelectionChanged="ComboBox_effect_type_SelectionChanged" ItemsSource="{Binding Source={StaticResource PercentEffectType}}" ItemTemplate="{Binding Source={StaticResource PercentEffectTypeTemplate}}"/>
                </layout:ColumnProperty>
            </StackPanel>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Center" />
            <StackPanel Grid.Column="2" Orientation="Vertical" Margin="10,0,5,0">
                <layout:HeaderedSeparator Header="Blinking" Margin="0,0,5,0"/>

                <layout:ColumnProperty PropertyHeader="Blink starts threshold:" AfterText="%" >
                    <xctk:IntegerUpDown x:Name="updown_blink_start" Margin="5,0" Value="1" Maximum="100" Minimum="0" MouseWheelActiveOnFocus="True" ValueChanged="updown_blink_start_ValueChanged"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Blink maximum threshold:" AfterText="%" >
                    <xctk:IntegerUpDown x:Name="updown_blink_max" Margin="5,0" Value="1" Maximum="100" Minimum="0" MouseWheelActiveOnFocus="True" ValueChanged="updown_blink_max_ValueChanged"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Blink speed:" AfterText="ms">

                    <xctk:IntegerUpDown x:Name="updown_blink_speed" Margin="5,0" Value="1000" Maximum="10000" Minimum="10" MouseWheelActiveOnFocus="True" ValueChanged="updown_blink_speed_ValueChanged"/>
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Blink Threshold:" AfterText="{Binding Value, ElementName=BlinkThreshold, Mode=OneWay, StringFormat=\{0\} %}">
                    <Slider x:Name="BlinkThreshold" IsSnapToTickEnabled="True" Maximum="100" Value="95" VerticalAlignment="Center" SmallChange="1" ValueChanged="BlinkThreshold_OnValueChanged" />
                </layout:ColumnProperty>

                <layout:ColumnProperty PropertyHeader="Blink Fade In:" AfterText="{Binding Value, ElementName=BlinkFadeIn, Mode=OneWay, StringFormat=\{0\} %}">
                    <Slider x:Name="BlinkFadeIn" IsSnapToTickEnabled="True"  Maximum="{qc:MultiBinding  '$P3 ? $P0 :$P1 - $P0', P0={Binding Value, ElementName=BlinkThreshold}, P1={Binding Maximum, ElementName=BlinkThreshold}, P3={Binding IsChecked, ElementName=CheckBoxThresholdReverse}}" VerticalAlignment="Center"    />
                </layout:ColumnProperty>

                <Border Height="24" Margin="5,0,5,5">
                    <CheckBox x:Name="CheckBoxThresholdReverse" Content="Reverse blink threshold" VerticalAlignment="Center" Checked="CheckBox_threshold_reverse_Checked" Unchecked="CheckBox_threshold_reverse_Checked" HorizontalAlignment="Left"/>
                </Border>

            </StackPanel>
            <GridSplitter Grid.Column="3" HorizontalAlignment="Center"/>
            <Controls:KeySequence Grid.Column="4" Margin="10,0,5,0" x:Name="KeySequence_keys" RecordingTag="PercentLayer" Title="Affected Keys" SequenceUpdated="KeySequence_keys_SequenceUpdated"/>
            <GridSplitter Grid.Column="5" HorizontalAlignment="Center"/>
        </Grid>
    </ScrollViewer>
</UserControl>
