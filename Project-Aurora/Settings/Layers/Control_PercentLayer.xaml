<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Aurora.Settings.Layers"
             xmlns:System="clr-namespace:System;assembly=mscorlib" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Controls="clr-namespace:Aurora.Controls"
             xmlns:EnumValueConverters="clr-namespace:Aurora.Utils"
             xmlns:EnumPercentEffectType="clr-namespace:Aurora.Settings"
             xmlns:ncore="http://schemas.ncore.com/wpf/xaml/colorbox"
             xmlns:layout="clr-namespace:Aurora.Controls.Layout"
             xmlns:qc="http://QuickConverter.CodePlex.com/"
             xmlns:adaptiveWrapPanel="clr-namespace:Voron.AdaptiveWrapPanel;assembly=Voron.AdaptiveWrapPanel"
             x:Class="Aurora.Settings.Layers.Control_PercentLayer"
             mc:Ignorable="d" Loaded="UserControl_Loaded" d:DataContext="{d:DesignInstance local:PercentLayerHandler}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="PercentEffectType" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="EnumPercentEffectType:PercentEffectType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <EnumValueConverters:PercentEffectTypeToStringVC x:Key="PercentEffectTypeToStringVC"/>
            <DataTemplate x:Key="PercentEffectTypeTemplate">
                <TextBlock Text="{Binding Converter={StaticResource PercentEffectTypeToStringVC}}" />
            </DataTemplate>
            <local:DrawingColorToMediaColorConverter x:Key="DrawingColorToMediaColorConverter"></local:DrawingColorToMediaColorConverter>
        </ResourceDictionary>
    </UserControl.Resources>
        
    <adaptiveWrapPanel:AdaptiveWrapPanel HorizontalContentAlignment="Stretch" >

        <StackPanel Orientation="Vertical" Margin="10,0,5,0" MinWidth="250" VerticalAlignment="Top" >

            <layout:ColumnProperty PropertyHeader="Current Value:">
                <ComboBox x:Name="ComboBoxVariable" IsEditable="True" Text="{Binding Properties._VariablePath}"/>
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Minimum Value:">
                <ComboBox x:Name="ComboBoxMinVariable" IsEditable="True" Text="{Binding Properties._MinVariablePath}" />
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Maximum Value:">
                <ComboBox x:Name="ComboBoxMaxVariable" IsEditable="True" Text="{Binding Properties._MaxVariablePath}"/>
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Progress Color:">
                <xctk:ColorPicker x:Name="ColorPickerProgressColor" Margin="5,0,0,0" ColorMode="ColorCanvas" UsingAlphaChannel="True" SelectedColor="{Binding Properties._PrimaryColor, Converter={StaticResource DrawingColorToMediaColorConverter}}"/>
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Background Color:">
                <xctk:ColorPicker x:Name="ColorPickerBackgroundColor" Margin="5,0,0,0" ColorMode="ColorCanvas" UsingAlphaChannel="True" SelectedColor="{Binding Properties._SecondaryColor, Converter={StaticResource DrawingColorToMediaColorConverter}}"/>
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Effect Type:">
                <ComboBox x:Name="ComboBox_effect_type" Margin="5,0,0,0" SelectionChanged="ComboBox_effect_type_SelectionChanged" ItemsSource="{Binding Source={StaticResource PercentEffectType}}" ItemTemplate="{Binding Source={StaticResource PercentEffectTypeTemplate}}"/>
            </layout:ColumnProperty>
            
        </StackPanel>
        <StackPanel Orientation="Vertical" Margin="10,0,5,0" MinWidth="250" VerticalAlignment="Top">
            <layout:HeaderedSeparator Header="Blinking" Margin="0,0,5,0"/>

            <layout:ColumnProperty PropertyHeader="Blink speed:" AfterText="ms">

                <xctk:IntegerUpDown x:Name="BlinkSpeed" Margin="5,0" Maximum="10000" Minimum="10" MouseWheelActiveOnFocus="True" Value="{Binding Properties._BlinkSpeed}"/>
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Blink Threshold:" AfterText="{Binding Value, ElementName=BlinkThreshold, Mode=OneWay, StringFormat=\{0\} %}">
                <Slider x:Name="BlinkThreshold" IsSnapToTickEnabled="True" Maximum="100" VerticalAlignment="Center" SmallChange="1" Value="{Binding Properties._BlinkThresholdStart}"/>
            </layout:ColumnProperty>

            <layout:ColumnProperty PropertyHeader="Blink Fade In:" AfterText="{Binding Value, ElementName=BlinkFadeIn, Mode=OneWay, StringFormat=\{0\} %}">
                <Slider x:Name="BlinkFadeIn" IsSnapToTickEnabled="True"  Maximum="{qc:MultiBinding  '$P3 ? $P0 :$P1 - $P0', P0={Binding Value, ElementName=BlinkThreshold}, P1={Binding Maximum, ElementName=BlinkThreshold}, P3={Binding IsChecked, ElementName=CheckBoxThresholdReverse}}" VerticalAlignment="Center" Value="{Binding Properties._BlinkFadeIn}"/>
            </layout:ColumnProperty>

            <Border Height="24" Margin="5,0,5,5">
                <CheckBox x:Name="CheckBoxThresholdReverse" Content="Reverse blink threshold" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding Properties._BlinkDirection}"/>
            </Border>

        </StackPanel>
        <Controls:KeySequence Margin="10,0,5,0" x:Name="KeySequence_keys" RecordingTag="PercentLayer" Title="Affected Keys" SequenceUpdated="KeySequence_keys_SequenceUpdated" VerticalAlignment="Stretch" adaptiveWrapPanel:AdaptiveWrapPanel.ColumnBreakBehavior="PreferNewColumn"/>
        
    </adaptiveWrapPanel:AdaptiveWrapPanel>

</UserControl>
